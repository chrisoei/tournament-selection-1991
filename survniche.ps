%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Thu Jul 11 04:44:57 GMT-0500 1991
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth	
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.02381 0.020704 0.014715 0.020297 [
[(10)] 0.23085 0.01472 0 2 Msboxa
[(20)] 0.43789 0.01472 0 2 Msboxa
[(30)] 0.64493 0.01472 0 2 Msboxa
[(40)] 0.85197 0.01472 0 2 Msboxa
[(Surviving Niches, Predicted and Experimental, N/n=7)] 0.5 0.61803 0 -2 Msboxa
[(5)] 0.01131 0.1162 1 0 Msboxa
[(10)] 0.01131 0.21768 1 0 Msboxa
[(15)] 0.01131 0.31917 1 0 Msboxa
[(20)] 0.01131 0.42065 1 0 Msboxa
[(25)] 0.01131 0.52213 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.23085 0.01472 moveto
0.23085 0.02097 lineto
stroke
grestore
[(10)] 0.23085 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.43789 0.01472 moveto
0.43789 0.02097 lineto
stroke
grestore
[(20)] 0.43789 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.64493 0.01472 moveto
0.64493 0.02097 lineto
stroke
grestore
[(30)] 0.64493 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.85197 0.01472 moveto
0.85197 0.02097 lineto
stroke
grestore
[(40)] 0.85197 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.06522 0.01472 moveto
0.06522 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10663 0.01472 moveto
0.10663 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14803 0.01472 moveto
0.14803 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18944 0.01472 moveto
0.18944 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27226 0.01472 moveto
0.27226 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31366 0.01472 moveto
0.31366 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35507 0.01472 moveto
0.35507 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.39648 0.01472 moveto
0.39648 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4793 0.01472 moveto
0.4793 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5207 0.01472 moveto
0.5207 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56211 0.01472 moveto
0.56211 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.60352 0.01472 moveto
0.60352 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68634 0.01472 moveto
0.68634 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72774 0.01472 moveto
0.72774 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76915 0.01472 moveto
0.76915 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81056 0.01472 moveto
0.81056 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89337 0.01472 moveto
0.89337 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93478 0.01472 moveto
0.93478 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.01472 moveto
0.97619 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
[(Surviving Niches, Predicted and Experimental, N/n=7)] 0.5 0.61803 0 -2 Mshowa
gsave
0.002 setlinewidth
0.02381 0.1162 moveto
0.03006 0.1162 lineto
stroke
grestore
[(5)] 0.01131 0.1162 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.21768 moveto
0.03006 0.21768 lineto
stroke
grestore
[(10)] 0.01131 0.21768 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.31917 moveto
0.03006 0.31917 lineto
stroke
grestore
[(15)] 0.01131 0.31917 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.42065 moveto
0.03006 0.42065 lineto
stroke
grestore
[(20)] 0.01131 0.42065 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.52213 moveto
0.03006 0.52213 lineto
stroke
grestore
[(25)] 0.01131 0.52213 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03501 moveto
0.02756 0.03501 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05531 moveto
0.02756 0.05531 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07561 moveto
0.02756 0.07561 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0959 moveto
0.02756 0.0959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1365 moveto
0.02756 0.1365 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15679 moveto
0.02756 0.15679 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17709 moveto
0.02756 0.17709 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19739 moveto
0.02756 0.19739 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23798 moveto
0.02756 0.23798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25828 moveto
0.02756 0.25828 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27857 moveto
0.02756 0.27857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29887 moveto
0.02756 0.29887 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33946 moveto
0.02756 0.33946 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35976 moveto
0.02756 0.35976 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38006 moveto
0.02756 0.38006 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40035 moveto
0.02756 0.40035 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44095 moveto
0.02756 0.44095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46124 moveto
0.02756 0.46124 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48154 moveto
0.02756 0.48154 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50184 moveto
0.02756 0.50184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54243 moveto
0.02756 0.54243 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56273 moveto
0.02756 0.56273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58302 moveto
0.02756 0.58302 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60332 moveto
0.02756 0.60332 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.04451 0.10844 moveto
0.06522 0.1255 lineto
0.08592 0.14204 lineto
0.10663 0.1581 lineto
0.12733 0.1737 lineto
0.14803 0.18886 lineto
0.16874 0.20359 lineto
0.18944 0.21792 lineto
0.21014 0.23186 lineto
0.23085 0.24542 lineto
0.25155 0.25862 lineto
0.27226 0.27148 lineto
0.29296 0.284 lineto
0.31366 0.2962 lineto
0.33437 0.3081 lineto
0.35507 0.3197 lineto
0.37578 0.33102 lineto
0.39648 0.34206 lineto
0.41718 0.35284 lineto
0.43789 0.36336 lineto
0.45859 0.37364 lineto
0.4793 0.38367 lineto
0.5 0.39348 lineto
0.5207 0.40307 lineto
0.54141 0.41244 lineto
0.56211 0.42161 lineto
0.58282 0.43057 lineto
0.60352 0.43934 lineto
0.62422 0.44792 lineto
0.64493 0.45632 lineto
0.66563 0.46455 lineto
0.68634 0.4726 lineto
0.70704 0.48049 lineto
0.72774 0.48822 lineto
0.74845 0.49579 lineto
0.76915 0.50321 lineto
0.78986 0.51049 lineto
0.81056 0.51762 lineto
0.83126 0.52462 lineto
0.85197 0.53148 lineto
0.87267 0.53821 lineto
0.89337 0.54482 lineto
0.91408 0.5513 lineto
0.93478 0.55766 lineto
0.95549 0.56391 lineto
0.97619 0.57004 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.04451 0.0959 moveto
0.06522 0.0959 lineto
0.08592 0.1162 lineto
0.10663 0.17709 lineto
0.12733 0.15679 lineto
0.14803 0.15679 lineto
0.16874 0.21768 lineto
0.18944 0.17709 lineto
0.21014 0.21768 lineto
0.23085 0.19739 lineto
0.25155 0.21768 lineto
0.27226 0.25828 lineto
0.29296 0.23798 lineto
0.31366 0.25828 lineto
0.33437 0.25828 lineto
0.35507 0.21768 lineto
0.37578 0.25828 lineto
0.39648 0.29887 lineto
0.41718 0.29887 lineto
0.43789 0.29887 lineto
0.45859 0.33946 lineto
0.4793 0.29887 lineto
0.5 0.35976 lineto
0.5207 0.38006 lineto
0.54141 0.40035 lineto
0.56211 0.31917 lineto
0.58282 0.42065 lineto
0.60352 0.40035 lineto
0.62422 0.44095 lineto
0.64493 0.38006 lineto
0.66563 0.40035 lineto
0.68634 0.46124 lineto
0.70704 0.46124 lineto
0.72774 0.46124 lineto
0.74845 0.48154 lineto
0.76915 0.44095 lineto
0.78986 0.46124 lineto
0.81056 0.42065 lineto
0.83126 0.50184 lineto
0.85197 0.50184 lineto
0.87267 0.48154 lineto
0.89337 0.44095 lineto
0.91408 0.50184 lineto
0.93478 0.50184 lineto
0.95549 0.60332 lineto
0.97619 0.54243 lineto
stroke
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage
