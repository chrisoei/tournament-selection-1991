%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 240.0 540.0 550.0
%%Creator: Mathematica
%%CreationDate: Wed Jul 10 02:17:14 GMT-0500 1991
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth	
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.02381 0.009524 0.014715 37.471682 [
[(20)] 0.21429 0.01472 0 2 Msboxa
[(40)] 0.40476 0.01472 0 2 Msboxa
[(60)] 0.59524 0.01472 0 2 Msboxa
[(80)] 0.78571 0.01472 0 2 Msboxa
[(100)] 0.97619 0.01472 0 2 Msboxa
[(Niche population vs. Rank \(Predicted vs. Mean Field\))] 0.5 0.61803 0 -2 Msboxa
[(0.0025)] 0.01131 0.10839 1 0 Msboxa
[(0.005)] 0.01131 0.20207 1 0 Msboxa
[(0.0075)] 0.01131 0.29575 1 0 Msboxa
[(0.01)] 0.01131 0.38943 1 0 Msboxa
[(0.0125)] 0.01131 0.48311 1 0 Msboxa
[(0.015)] 0.01131 0.57679 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(20)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(40)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(60)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(80)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(100)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
[(Niche population vs. Rank \(Predicted vs. Mean Field\))] 0.5 0.61803 0 -2 Mshowa
gsave
0.002 setlinewidth
0.02381 0.10839 moveto
0.03006 0.10839 lineto
stroke
grestore
[(0.0025)] 0.01131 0.10839 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.20207 moveto
0.03006 0.20207 lineto
stroke
grestore
[(0.005)] 0.01131 0.20207 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.29575 moveto
0.03006 0.29575 lineto
stroke
grestore
[(0.0075)] 0.01131 0.29575 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38943 moveto
0.03006 0.38943 lineto
stroke
grestore
[(0.01)] 0.01131 0.38943 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.48311 moveto
0.03006 0.48311 lineto
stroke
grestore
[(0.0125)] 0.01131 0.48311 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.57679 moveto
0.03006 0.57679 lineto
stroke
grestore
[(0.015)] 0.01131 0.57679 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03345 moveto
0.02756 0.03345 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05219 moveto
0.02756 0.05219 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07092 moveto
0.02756 0.07092 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08966 moveto
0.02756 0.08966 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12713 moveto
0.02756 0.12713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14587 moveto
0.02756 0.14587 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1646 moveto
0.02756 0.1646 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18334 moveto
0.02756 0.18334 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22081 moveto
0.02756 0.22081 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23955 moveto
0.02756 0.23955 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25828 moveto
0.02756 0.25828 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27702 moveto
0.02756 0.27702 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31449 moveto
0.02756 0.31449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33322 moveto
0.02756 0.33322 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35196 moveto
0.02756 0.35196 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3707 moveto
0.02756 0.3707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40817 moveto
0.02756 0.40817 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4269 moveto
0.02756 0.4269 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44564 moveto
0.02756 0.44564 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46438 moveto
0.02756 0.46438 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50185 moveto
0.02756 0.50185 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52058 moveto
0.02756 0.52058 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53932 moveto
0.02756 0.53932 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55805 moveto
0.02756 0.55805 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59553 moveto
0.02756 0.59553 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61426 moveto
0.02756 0.61426 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.05321 lineto
0.10317 0.09154 lineto
0.14286 0.12955 lineto
0.18254 0.16706 lineto
0.22222 0.20392 lineto
0.2619 0.23996 lineto
0.30159 0.27505 lineto
0.34127 0.30902 lineto
0.38095 0.34173 lineto
0.42063 0.37303 lineto
0.46032 0.40281 lineto
0.5 0.43092 lineto
0.53968 0.45725 lineto
0.57937 0.48169 lineto
0.61905 0.50412 lineto
0.65873 0.52446 lineto
0.69841 0.54262 lineto
0.7381 0.55851 lineto
0.77778 0.57208 lineto
0.81746 0.58326 lineto
0.85714 0.59201 lineto
0.87698 0.59546 lineto
0.89683 0.59828 lineto
0.91667 0.60048 lineto
0.92659 0.60135 lineto
0.93651 0.60206 lineto
0.94643 0.60261 lineto
0.95139 0.60283 lineto
0.95635 0.603 lineto
0.96131 0.60314 lineto
0.96379 0.6032 lineto
0.96627 0.60324 lineto
0.96875 0.60327 lineto
0.96999 0.60329 lineto
0.97123 0.6033 lineto
0.97247 0.60331 lineto
0.97371 0.60331 lineto
0.97495 0.60332 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
gsave
0.004 setlinewidth
0.03333 0.0239 moveto
0.04286 0.03303 lineto
0.05238 0.04224 lineto
0.0619 0.05132 lineto
0.07143 0.06053 lineto
0.08095 0.06958 lineto
0.09048 0.0788 lineto
0.1 0.08799 lineto
0.10952 0.09688 lineto
0.11905 0.10595 lineto
0.12857 0.11504 lineto
0.1381 0.12399 lineto
0.14762 0.13306 lineto
0.15714 0.14205 lineto
0.16667 0.15077 lineto
0.17619 0.15989 lineto
0.18571 0.16875 lineto
0.19524 0.17771 lineto
0.20476 0.18659 lineto
0.21429 0.19498 lineto
0.22381 0.20366 lineto
0.23333 0.21205 lineto
0.24286 0.22092 lineto
0.25238 0.23 lineto
0.2619 0.23813 lineto
0.27143 0.24634 lineto
0.28095 0.25453 lineto
0.29048 0.26333 lineto
0.3 0.27117 lineto
0.30952 0.2793 lineto
0.31905 0.28713 lineto
0.32857 0.29622 lineto
0.3381 0.30332 lineto
0.34762 0.31104 lineto
0.35714 0.32001 lineto
0.36667 0.32737 lineto
0.37619 0.33481 lineto
0.38571 0.3425 lineto
0.39524 0.35001 lineto
0.40476 0.35876 lineto
0.41429 0.36525 lineto
0.42381 0.37122 lineto
0.43333 0.37975 lineto
0.44286 0.38691 lineto
0.45238 0.39379 lineto
0.4619 0.40035 lineto
0.47143 0.40603 lineto
0.48095 0.41383 lineto
0.49048 0.42106 lineto
0.5 0.42722 lineto
Mistroke
0.50952 0.43319 lineto
0.51905 0.44096 lineto
0.52857 0.44487 lineto
0.5381 0.45205 lineto
0.54762 0.45957 lineto
0.55714 0.46499 lineto
0.56667 0.47013 lineto
0.57619 0.47467 lineto
0.58571 0.48173 lineto
0.59524 0.48702 lineto
0.60476 0.49172 lineto
0.61429 0.49752 lineto
0.62381 0.50184 lineto
0.63333 0.50931 lineto
0.64286 0.51256 lineto
0.65238 0.51605 lineto
0.6619 0.51798 lineto
0.67143 0.52688 lineto
0.68095 0.53064 lineto
0.69048 0.53482 lineto
0.7 0.53799 lineto
0.70952 0.54242 lineto
0.71905 0.54844 lineto
0.72857 0.55112 lineto
0.7381 0.55516 lineto
0.74762 0.55874 lineto
0.75714 0.56193 lineto
0.76667 0.56468 lineto
0.77619 0.5677 lineto
0.78571 0.57036 lineto
0.79524 0.57252 lineto
0.80476 0.57598 lineto
0.81429 0.57831 lineto
0.82381 0.58287 lineto
0.83333 0.5844 lineto
0.84286 0.58521 lineto
0.85238 0.58786 lineto
0.8619 0.58864 lineto
0.87143 0.59056 lineto
0.88095 0.59152 lineto
0.89048 0.59326 lineto
0.9 0.59506 lineto
0.90952 0.59662 lineto
0.91905 0.5985 lineto
0.92857 0.59873 lineto
0.9381 0.59883 lineto
0.94762 0.59891 lineto
0.95714 0.59954 lineto
0.96667 0.59967 lineto
0.97619 0.60015 lineto
Mistroke
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage
